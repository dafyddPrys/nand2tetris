// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Bit.hdl

/**
 * 1-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 *                 else out does not change (out[t+1] = out[t])
 */

CHIP Bit {
    IN in, load;
    OUT out;

    PARTS:
    // Put your code here:
    // "if load(t-1)", so need last cycle's load
    DFF(in=in, out=int1);
    DFF(in=load, out=loadt1);
    // out(t) = load(t-1) or out(t) = in(t-1)
    Mux(a=outcpy, b=int1, sel=loadt1, out=mxout);
    DFF(in=mxout, out=outcpy);
    // fork the output so we can feed back in
    And(a=mxout, b=true, out=out);
}
